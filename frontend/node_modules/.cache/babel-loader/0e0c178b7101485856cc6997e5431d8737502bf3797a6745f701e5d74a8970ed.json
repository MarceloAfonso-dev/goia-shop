{"ast":null,"code":"import _objectSpread from\"D:/PI4/goia-shop/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Table,Card,Badge,Spinner,Alert,Row,Col,Button,Modal,Form,InputGroup,Pagination}from'react-bootstrap';import api from'../utils/api';import UsuarioCadastroModal from'./UsuarioCadastroModal';import UsuarioAlteracaoModal from'./UsuarioAlteracaoModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserList=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[loadingUserId,setLoadingUserId]=useState(null);const[showModal,setShowModal]=useState(false);const[selectedUser,setSelectedUser]=useState(null);// Estados de filtro e paginação\nconst[filtroNome,setFiltroNome]=useState('');const[filtroStatus,setFiltroStatus]=useState('');const[showCadastroModal,setShowCadastroModal]=useState(false);const[showAlteracaoModal,setShowAlteracaoModal]=useState(false);const[usuarioParaAlterar,setUsuarioParaAlterar]=useState(null);// Estados de paginação\nconst[paginationData,setPaginationData]=useState({content:[],page:0,size:5,totalElements:0,totalPages:0,first:true,last:true});const[currentPage,setCurrentPage]=useState(0);const[pageSize,setPageSize]=useState(5);useEffect(()=>{fetchUsers();},[currentPage,pageSize]);const fetchUsers=async function(){let nomeFilter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:filtroNome;let statusFilter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:filtroStatus;let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:currentPage;let size=arguments.length>3&&arguments[3]!==undefined?arguments[3]:pageSize;try{setLoading(true);setError('');const params=new URLSearchParams({page:page.toString(),pageSize:size.toString()});if(nomeFilter.trim()){params.append('nome',nomeFilter);}if(statusFilter){params.append('status',statusFilter);}const response=await api.get(\"/usuarios?\".concat(params.toString()));// Atualiza dados de paginação\nsetPaginationData(response.data);setUsers(response.data.content);}catch(err){var _err$response,_err$response2,_err$response2$data;if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===403){setError('Acesso negado. Apenas administradores podem visualizar usuários.');}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.message){setError('Erro ao carregar usuários: '+err.response.data.message);}else{setError('Erro ao conectar com o servidor');}}finally{setLoading(false);}};const handleStatusChange=async user=>{setSelectedUser(user);setShowModal(true);};const confirmStatusChange=async()=>{if(!selectedUser)return;try{setLoadingUserId(selectedUser.id);const novoStatus=selectedUser.status==='ATIVO'?'INATIVO':'ATIVO';await api.put(\"/usuarios/\".concat(selectedUser.id,\"/status\"),{status:novoStatus});// Atualiza a lista de usuários\nsetUsers(users.map(user=>user.id===selectedUser.id?_objectSpread(_objectSpread({},user),{},{status:novoStatus}):user));setShowModal(false);setSelectedUser(null);}catch(err){var _err$response3,_err$response3$data;console.error('Erro ao alterar status:',err);setError('Erro ao alterar status do usuário: '+(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||err.message));}finally{setLoadingUserId(null);}};const cancelStatusChange=()=>{setShowModal(false);setSelectedUser(null);};// Função para apenas atualizar o valor do filtro (sem aplicar)\nconst handleFiltroChange=e=>{const valor=e.target.value;setFiltroNome(valor);};// Função para atualizar filtro de status\nconst handleFiltroStatusChange=e=>{const valor=e.target.value;setFiltroStatus(valor);};// Função para aplicar o filtro ao clicar no botão de pesquisa\nconst aplicarFiltro=()=>{setCurrentPage(0);// Reset para primeira página\nfetchUsers(filtroNome,filtroStatus,0,pageSize);};// Função para aplicar filtro quando pressionar Enter\nconst handleKeyPress=e=>{if(e.key==='Enter'){aplicarFiltro();}};// Funções de paginação\nconst handlePageChange=newPage=>{setCurrentPage(newPage);fetchUsers(filtroNome,filtroStatus,newPage,pageSize);};const handlePageSizeChange=e=>{const newSize=parseInt(e.target.value);setPageSize(newSize);setCurrentPage(0);fetchUsers(filtroNome,filtroStatus,0,newSize);};// Função para abrir modal de cadastro\nconst abrirCadastro=()=>{setShowCadastroModal(true);};// Função para abrir modal de alteração\nconst abrirAlteracao=usuario=>{setUsuarioParaAlterar(usuario);setShowAlteracaoModal(true);};// Função para limpar filtros\nconst limparFiltros=()=>{setFiltroNome('');setFiltroStatus('');setCurrentPage(0);fetchUsers('','',0,pageSize);};const getGroupBadge=grupo=>{return grupo==='ADMIN'?/*#__PURE__*/_jsx(Badge,{bg:\"danger\",children:grupo}):/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:grupo});};const getStatusBadge=status=>{return status==='ATIVO'?/*#__PURE__*/_jsx(Badge,{bg:\"success\",children:status}):/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",children:status});};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('pt-BR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});};const maskCPF=cpf=>{return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/,'$1.$2.$3-$4');};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-5\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Carregando...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Carregando usu\\xE1rios...\"})]});}if(error){return/*#__PURE__*/_jsxs(Alert,{variant:\"danger\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"Erro!\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Row,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"\\uD83D\\uDC65 Resumo de Usu\\xE1rios\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-primary\",children:paginationData.totalElements}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Total de Usu\\xE1rios\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-danger\",children:users.filter(u=>u.grupo==='ADMIN').length}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Administradores (p\\xE1gina atual)\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-info\",children:users.filter(u=>u.grupo==='ESTOQUISTA').length}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Estoquistas (p\\xE1gina atual)\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-success\",children:users.filter(u=>u.status==='ATIVO').length}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Ativos (p\\xE1gina atual)\"})]})})]})]})})})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Lista de Usu\\xE1rios do Sistema\"}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"P\\xE1gina \",currentPage+1,\" de \",paginationData.totalPages,\" |\",paginationData.totalElements,\" usu\\xE1rios encontrados\"]})]}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsxs(Row,{className:\"g-2\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Nome do usu\\xE1rio...\",size:\"sm\",value:filtroNome,onChange:handleFiltroChange,onKeyPress:handleKeyPress})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Select,{size:\"sm\",value:filtroStatus,onChange:handleFiltroStatusChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todos Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ATIVO\",children:\"Ativo\"}),/*#__PURE__*/_jsx(\"option\",{value:\"INATIVO\",children:\"Inativo\"})]})}),/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",onClick:aplicarFiltro,title:\"Buscar usu\\xE1rios\",className:\"w-100\",children:\"\\uD83D\\uDD0D\"})}),/*#__PURE__*/_jsx(Col,{md:1,children:/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",size:\"sm\",onClick:limparFiltros,title:\"Limpar filtros\",className:\"w-100\",children:\"\\u2715\"})}),/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"sm\",onClick:abrirCadastro,className:\"w-100\",children:\"\\u2795 Cadastrar\"})})]})})})})]})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nome\"}),/*#__PURE__*/_jsx(\"th\",{children:\"CPF\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Grupo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Data Cria\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(\"th\",{children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:user.nome})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"code\",{children:maskCPF(user.cpf)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"text-primary\",children:user.email})}),/*#__PURE__*/_jsx(\"td\",{children:getGroupBadge(user.grupo)}),/*#__PURE__*/_jsx(\"td\",{children:getStatusBadge(user.status)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:formatDate(user.createdAt)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",onClick:()=>abrirAlteracao(user),title:\"Editar usu\\xE1rio\",className:\"me-1\",children:\"\\u270F\\uFE0F Editar\"}),/*#__PURE__*/_jsx(Button,{variant:user.status==='ATIVO'?'warning':'success',size:\"sm\",onClick:()=>handleStatusChange(user),disabled:loadingUserId===user.id,title:user.status==='ATIVO'?'Desativar usuário':'Ativar usuário',children:loadingUserId===user.id?/*#__PURE__*/_jsx(Spinner,{size:\"sm\",animation:\"border\"}):/*#__PURE__*/_jsx(_Fragment,{children:user.status==='ATIVO'?/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDD12 Desativar\"}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDD13 Ativar\"})})})]})})]},user.id))})]})}),/*#__PURE__*/_jsxs(Row,{className:\"mt-3 align-items-center\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{className:\"me-2\",children:\"Itens por p\\xE1gina:\"}),/*#__PURE__*/_jsxs(Form.Select,{size:\"sm\",value:pageSize,onChange:handlePageSizeChange,style:{width:'auto',display:'inline-block'},children:[/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:20,children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50\"})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,className:\"text-center\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"Mostrando \",paginationData.content.length,\" de \",paginationData.totalElements,\" usu\\xE1rios\"]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Pagination,{className:\"justify-content-end mb-0\",size:\"sm\",children:[/*#__PURE__*/_jsx(Pagination.First,{disabled:paginationData.first,onClick:()=>handlePageChange(0)}),/*#__PURE__*/_jsx(Pagination.Prev,{disabled:paginationData.first,onClick:()=>handlePageChange(currentPage-1)}),(()=>{const pages=[];const startPage=Math.max(0,currentPage-2);const endPage=Math.min(paginationData.totalPages-1,currentPage+2);for(let i=startPage;i<=endPage;i++){pages.push(/*#__PURE__*/_jsx(Pagination.Item,{active:i===currentPage,onClick:()=>handlePageChange(i),children:i+1},i));}return pages;})(),/*#__PURE__*/_jsx(Pagination.Next,{disabled:paginationData.last,onClick:()=>handlePageChange(currentPage+1)}),/*#__PURE__*/_jsx(Pagination.Last,{disabled:paginationData.last,onClick:()=>handlePageChange(paginationData.totalPages-1)})]})})]})]})]}),/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"mt-3\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"\\u2139\\uFE0F Informa\\xE7\\xE3o\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Esta funcionalidade est\\xE1 dispon\\xEDvel apenas para usu\\xE1rios com perfil de \",/*#__PURE__*/_jsx(\"strong\",{children:\"ADMINISTRADOR\"}),\". Usu\\xE1rios com perfil de \",/*#__PURE__*/_jsx(\"strong\",{children:\"ESTOQUISTA\"}),\" n\\xE3o t\\xEAm acesso a esta lista.\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"A\\xE7\\xF5es dispon\\xEDveis:\"}),\" Voc\\xEA pode cadastrar novos usu\\xE1rios, editar informa\\xE7\\xF5es, filtrar a lista por nome e ativar/desativar usu\\xE1rios conforme necess\\xE1rio. Usu\\xE1rios inativos n\\xE3o poder\\xE3o fazer login no sistema.\"]})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:cancelStatusChange,centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:(selectedUser===null||selectedUser===void 0?void 0:selectedUser.status)==='ATIVO'?'🔒 Desativar Usuário':'🔓 Ativar Usuário'})}),/*#__PURE__*/_jsx(Modal.Body,{children:selectedUser&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Tem certeza que deseja \",selectedUser.status==='ATIVO'?'desativar':'ativar',\" o usu\\xE1rio:\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light p-3 rounded\",children:[/*#__PURE__*/_jsx(\"strong\",{children:selectedUser.nome}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:selectedUser.email}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Badge,{bg:selectedUser.grupo==='ADMIN'?'danger':'info',children:selectedUser.grupo})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Alert,{variant:selectedUser.status==='ATIVO'?'warning':'info',children:selectedUser.status==='ATIVO'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A0\\uFE0F Aten\\xE7\\xE3o:\"}),\" Ao desativar este usu\\xE1rio, ele n\\xE3o conseguir\\xE1 mais fazer login no sistema at\\xE9 ser reativado.\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2139\\uFE0F Informa\\xE7\\xE3o:\"}),\" Ao ativar este usu\\xE1rio, ele poder\\xE1 fazer login normalmente no sistema.\"]})})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:cancelStatusChange,children:\"Cancelar\"}),/*#__PURE__*/_jsxs(Button,{variant:(selectedUser===null||selectedUser===void 0?void 0:selectedUser.status)==='ATIVO'?'warning':'success',onClick:confirmStatusChange,disabled:loadingUserId!==null,children:[loadingUserId!==null?/*#__PURE__*/_jsx(Spinner,{size:\"sm\",animation:\"border\",className:\"me-2\"}):null,(selectedUser===null||selectedUser===void 0?void 0:selectedUser.status)==='ATIVO'?'Sim, Desativar':'Sim, Ativar']})]})]}),/*#__PURE__*/_jsx(UsuarioCadastroModal,{show:showCadastroModal,onHide:()=>setShowCadastroModal(false),onUsuarioCadastrado:()=>{fetchUsers(filtroNome,filtroStatus,currentPage,pageSize);setShowCadastroModal(false);}}),/*#__PURE__*/_jsx(UsuarioAlteracaoModal,{show:showAlteracaoModal,onHide:()=>{setShowAlteracaoModal(false);setUsuarioParaAlterar(null);},usuario:usuarioParaAlterar,onUsuarioAlterado:()=>{fetchUsers(filtroNome,filtroStatus,currentPage,pageSize);setShowAlteracaoModal(false);setUsuarioParaAlterar(null);}})]});};export default UserList;","map":{"version":3,"names":["React","useState","useEffect","Table","Card","Badge","Spinner","Alert","Row","Col","Button","Modal","Form","InputGroup","Pagination","api","UsuarioCadastroModal","UsuarioAlteracaoModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserList","users","setUsers","loading","setLoading","error","setError","loadingUserId","setLoadingUserId","showModal","setShowModal","selectedUser","setSelectedUser","filtroNome","setFiltroNome","filtroStatus","setFiltroStatus","showCadastroModal","setShowCadastroModal","showAlteracaoModal","setShowAlteracaoModal","usuarioParaAlterar","setUsuarioParaAlterar","paginationData","setPaginationData","content","page","size","totalElements","totalPages","first","last","currentPage","setCurrentPage","pageSize","setPageSize","fetchUsers","nomeFilter","arguments","length","undefined","statusFilter","params","URLSearchParams","toString","trim","append","response","get","concat","data","err","_err$response","_err$response2","_err$response2$data","status","message","handleStatusChange","user","confirmStatusChange","id","novoStatus","put","map","_objectSpread","_err$response3","_err$response3$data","console","cancelStatusChange","handleFiltroChange","e","valor","target","value","handleFiltroStatusChange","aplicarFiltro","handleKeyPress","key","handlePageChange","newPage","handlePageSizeChange","newSize","parseInt","abrirCadastro","abrirAlteracao","usuario","limparFiltros","getGroupBadge","grupo","bg","children","getStatusBadge","formatDate","dateString","Date","toLocaleDateString","day","month","year","hour","minute","maskCPF","cpf","replace","className","animation","role","variant","Heading","Body","Title","md","filter","u","Header","Control","type","placeholder","onChange","onKeyPress","Select","onClick","title","striped","bordered","hover","nome","email","createdAt","disabled","Group","Label","style","width","display","First","Prev","pages","startPage","Math","max","endPage","min","i","push","Item","active","Next","Last","show","onHide","centered","closeButton","Footer","onUsuarioCadastrado","onUsuarioAlterado"],"sources":["D:/PI4/goia-shop/frontend/src/components/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Card, Badge, Spinner, Alert, Row, Col, Button, Modal, Form, InputGroup, Pagination } from 'react-bootstrap';\r\nimport api from '../utils/api';\r\nimport UsuarioCadastroModal from './UsuarioCadastroModal';\r\nimport UsuarioAlteracaoModal from './UsuarioAlteracaoModal';\r\n\r\nconst UserList = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [loadingUserId, setLoadingUserId] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    \r\n    // Estados de filtro e paginação\r\n    const [filtroNome, setFiltroNome] = useState('');\r\n    const [filtroStatus, setFiltroStatus] = useState('');\r\n    const [showCadastroModal, setShowCadastroModal] = useState(false);\r\n    const [showAlteracaoModal, setShowAlteracaoModal] = useState(false);\r\n    const [usuarioParaAlterar, setUsuarioParaAlterar] = useState(null);\r\n    \r\n    // Estados de paginação\r\n    const [paginationData, setPaginationData] = useState({\r\n        content: [],\r\n        page: 0,\r\n        size: 5,\r\n        totalElements: 0,\r\n        totalPages: 0,\r\n        first: true,\r\n        last: true\r\n    });\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [pageSize, setPageSize] = useState(5);\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [currentPage, pageSize]);\r\n\r\n    const fetchUsers = async (nomeFilter = filtroNome, statusFilter = filtroStatus, page = currentPage, size = pageSize) => {\r\n        try {\r\n            setLoading(true);\r\n            setError('');\r\n\r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                pageSize: size.toString()\r\n            });\r\n\r\n            if (nomeFilter.trim()) {\r\n                params.append('nome', nomeFilter);\r\n            }\r\n            if (statusFilter) {\r\n                params.append('status', statusFilter);\r\n            }\r\n\r\n            const response = await api.get(`/usuarios?${params.toString()}`);\r\n            \r\n            // Atualiza dados de paginação\r\n            setPaginationData(response.data);\r\n            setUsers(response.data.content);\r\n            \r\n        } catch (err) {\r\n            if (err.response?.status === 403) {\r\n                setError('Acesso negado. Apenas administradores podem visualizar usuários.');\r\n            } else if (err.response?.data?.message) {\r\n                setError('Erro ao carregar usuários: ' + err.response.data.message);\r\n            } else {\r\n                setError('Erro ao conectar com o servidor');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handleStatusChange = async (user) => {\r\n        setSelectedUser(user);\r\n        setShowModal(true);\r\n    };\r\n    \r\n    const confirmStatusChange = async () => {\r\n        if (!selectedUser) return;\r\n        \r\n        try {\r\n            setLoadingUserId(selectedUser.id);\r\n            const novoStatus = selectedUser.status === 'ATIVO' ? 'INATIVO' : 'ATIVO';\r\n            \r\n            await api.put(`/usuarios/${selectedUser.id}/status`, {\r\n                status: novoStatus\r\n            });\r\n            \r\n            // Atualiza a lista de usuários\r\n            setUsers(users.map(user => \r\n                user.id === selectedUser.id \r\n                    ? { ...user, status: novoStatus }\r\n                    : user\r\n            ));\r\n            \r\n            setShowModal(false);\r\n            setSelectedUser(null);\r\n            \r\n        } catch (err) {\r\n            console.error('Erro ao alterar status:', err);\r\n            setError('Erro ao alterar status do usuário: ' + (err.response?.data?.message || err.message));\r\n        } finally {\r\n            setLoadingUserId(null);\r\n        }\r\n    };\r\n    \r\n    const cancelStatusChange = () => {\r\n        setShowModal(false);\r\n        setSelectedUser(null);\r\n    };\r\n\r\n    // Função para apenas atualizar o valor do filtro (sem aplicar)\r\n    const handleFiltroChange = (e) => {\r\n        const valor = e.target.value;\r\n        setFiltroNome(valor);\r\n    };\r\n\r\n    // Função para atualizar filtro de status\r\n    const handleFiltroStatusChange = (e) => {\r\n        const valor = e.target.value;\r\n        setFiltroStatus(valor);\r\n    };\r\n\r\n    // Função para aplicar o filtro ao clicar no botão de pesquisa\r\n    const aplicarFiltro = () => {\r\n        setCurrentPage(0); // Reset para primeira página\r\n        fetchUsers(filtroNome, filtroStatus, 0, pageSize);\r\n    };\r\n\r\n    // Função para aplicar filtro quando pressionar Enter\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            aplicarFiltro();\r\n        }\r\n    };\r\n\r\n    // Funções de paginação\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n        fetchUsers(filtroNome, filtroStatus, newPage, pageSize);\r\n    };\r\n\r\n    const handlePageSizeChange = (e) => {\r\n        const newSize = parseInt(e.target.value);\r\n        setPageSize(newSize);\r\n        setCurrentPage(0);\r\n        fetchUsers(filtroNome, filtroStatus, 0, newSize);\r\n    };\r\n\r\n    // Função para abrir modal de cadastro\r\n    const abrirCadastro = () => {\r\n        setShowCadastroModal(true);\r\n    };\r\n\r\n    // Função para abrir modal de alteração\r\n    const abrirAlteracao = (usuario) => {\r\n        setUsuarioParaAlterar(usuario);\r\n        setShowAlteracaoModal(true);\r\n    };\r\n\r\n    // Função para limpar filtros\r\n    const limparFiltros = () => {\r\n        setFiltroNome('');\r\n        setFiltroStatus('');\r\n        setCurrentPage(0);\r\n        fetchUsers('', '', 0, pageSize);\r\n    };\r\n\r\n    const getGroupBadge = (grupo) => {\r\n        return grupo === 'ADMIN' ? \r\n            <Badge bg=\"danger\">{grupo}</Badge> : \r\n            <Badge bg=\"info\">{grupo}</Badge>;\r\n    };\r\n\r\n    const getStatusBadge = (status) => {\r\n        return status === 'ATIVO' ? \r\n            <Badge bg=\"success\">{status}</Badge> : \r\n            <Badge bg=\"secondary\">{status}</Badge>;\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('pt-BR', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const maskCPF = (cpf) => {\r\n        return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Carregando...</span>\r\n                </Spinner>\r\n                <p className=\"mt-2\">Carregando usuários...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Alert variant=\"danger\">\r\n                <Alert.Heading>Erro!</Alert.Heading>\r\n                <p>{error}</p>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>👥 Resumo de Usuários</Card.Title>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <div className=\"text-center\">\r\n                                        <h4 className=\"text-primary\">{paginationData.totalElements}</h4>\r\n                                        <small className=\"text-muted\">Total de Usuários</small>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <div className=\"text-center\">\r\n                                        <h4 className=\"text-danger\">\r\n                                            {users.filter(u => u.grupo === 'ADMIN').length}\r\n                                        </h4>\r\n                                        <small className=\"text-muted\">Administradores (página atual)</small>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <div className=\"text-center\">\r\n                                        <h4 className=\"text-info\">\r\n                                            {users.filter(u => u.grupo === 'ESTOQUISTA').length}\r\n                                        </h4>\r\n                                        <small className=\"text-muted\">Estoquistas (página atual)</small>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <div className=\"text-center\">\r\n                                        <h4 className=\"text-success\">\r\n                                            {users.filter(u => u.status === 'ATIVO').length}\r\n                                        </h4>\r\n                                        <small className=\"text-muted\">Ativos (página atual)</small>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Card>\r\n                <Card.Header>\r\n                    <Row className=\"align-items-center\">\r\n                        <Col md={6}>\r\n                            <h5 className=\"mb-0\">Lista de Usuários do Sistema</h5>\r\n                            <small className=\"text-muted\">\r\n                                Página {currentPage + 1} de {paginationData.totalPages} | \r\n                                {paginationData.totalElements} usuários encontrados\r\n                            </small>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <Row className=\"g-2\">\r\n                                        <Col md={4}>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Nome do usuário...\"\r\n                                                size=\"sm\"\r\n                                                value={filtroNome}\r\n                                                onChange={handleFiltroChange}\r\n                                                onKeyPress={handleKeyPress}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Form.Select\r\n                                                size=\"sm\"\r\n                                                value={filtroStatus}\r\n                                                onChange={handleFiltroStatusChange}\r\n                                            >\r\n                                                <option value=\"\">Todos Status</option>\r\n                                                <option value=\"ATIVO\">Ativo</option>\r\n                                                <option value=\"INATIVO\">Inativo</option>\r\n                                            </Form.Select>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button \r\n                                                variant=\"primary\" \r\n                                                size=\"sm\"\r\n                                                onClick={aplicarFiltro}\r\n                                                title=\"Buscar usuários\"\r\n                                                className=\"w-100\"\r\n                                            >\r\n                                                🔍\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={1}>\r\n                                            <Button \r\n                                                variant=\"outline-secondary\" \r\n                                                size=\"sm\"\r\n                                                onClick={limparFiltros}\r\n                                                title=\"Limpar filtros\"\r\n                                                className=\"w-100\"\r\n                                            >\r\n                                                ✕\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button \r\n                                                variant=\"success\" \r\n                                                size=\"sm\" \r\n                                                onClick={abrirCadastro}\r\n                                                className=\"w-100\"\r\n                                            >\r\n                                                ➕ Cadastrar\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"table-responsive\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Nome</th>\r\n                                    <th>CPF</th>\r\n                                    <th>Email</th>\r\n                                    <th>Grupo</th>\r\n                                    <th>Status</th>\r\n                                    <th>Data Criação</th>\r\n                                    <th>Ações</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map((user) => (\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.id}</td>\r\n                                        <td>\r\n                                            <strong>{user.nome}</strong>\r\n                                        </td>\r\n                                        <td>\r\n                                            <code>{maskCPF(user.cpf)}</code>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span className=\"text-primary\">{user.email}</span>\r\n                                        </td>\r\n                                        <td>{getGroupBadge(user.grupo)}</td>\r\n                                        <td>{getStatusBadge(user.status)}</td>\r\n                                        <td>\r\n                                            <small className=\"text-muted\">\r\n                                                {formatDate(user.createdAt)}\r\n                                            </small>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex gap-1\">\r\n                                                <Button\r\n                                                    variant=\"primary\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => abrirAlteracao(user)}\r\n                                                    title=\"Editar usuário\"\r\n                                                    className=\"me-1\"\r\n                                                >\r\n                                                    ✏️ Editar\r\n                                                </Button>\r\n                                                <Button\r\n                                                    variant={user.status === 'ATIVO' ? 'warning' : 'success'}\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => handleStatusChange(user)}\r\n                                                    disabled={loadingUserId === user.id}\r\n                                                    title={user.status === 'ATIVO' ? 'Desativar usuário' : 'Ativar usuário'}\r\n                                                >\r\n                                                    {loadingUserId === user.id ? (\r\n                                                        <Spinner size=\"sm\" animation=\"border\" />\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {user.status === 'ATIVO' ? (\r\n                                                                <>🔒 Desativar</>\r\n                                                            ) : (\r\n                                                                <>🔓 Ativar</>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    \r\n                    {/* Controles de Paginação */}\r\n                    <Row className=\"mt-3 align-items-center\">\r\n                        <Col md={4}>\r\n                            <Form.Group>\r\n                                <Form.Label className=\"me-2\">Itens por página:</Form.Label>\r\n                                <Form.Select\r\n                                    size=\"sm\"\r\n                                    value={pageSize}\r\n                                    onChange={handlePageSizeChange}\r\n                                    style={{ width: 'auto', display: 'inline-block' }}\r\n                                >\r\n                                    <option value={5}>5</option>\r\n                                    <option value={10}>10</option>\r\n                                    <option value={20}>20</option>\r\n                                    <option value={50}>50</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4} className=\"text-center\">\r\n                            <small className=\"text-muted\">\r\n                                Mostrando {paginationData.content.length} de {paginationData.totalElements} usuários\r\n                            </small>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Pagination className=\"justify-content-end mb-0\" size=\"sm\">\r\n                                <Pagination.First \r\n                                    disabled={paginationData.first}\r\n                                    onClick={() => handlePageChange(0)}\r\n                                />\r\n                                <Pagination.Prev \r\n                                    disabled={paginationData.first}\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                />\r\n                                \r\n                                {/* Páginas numeradas */}\r\n                                {(() => {\r\n                                    const pages = [];\r\n                                    const startPage = Math.max(0, currentPage - 2);\r\n                                    const endPage = Math.min(paginationData.totalPages - 1, currentPage + 2);\r\n                                    \r\n                                    for (let i = startPage; i <= endPage; i++) {\r\n                                        pages.push(\r\n                                            <Pagination.Item\r\n                                                key={i}\r\n                                                active={i === currentPage}\r\n                                                onClick={() => handlePageChange(i)}\r\n                                            >\r\n                                                {i + 1}\r\n                                            </Pagination.Item>\r\n                                        );\r\n                                    }\r\n                                    return pages;\r\n                                })()}\r\n                                \r\n                                <Pagination.Next \r\n                                    disabled={paginationData.last}\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                />\r\n                                <Pagination.Last \r\n                                    disabled={paginationData.last}\r\n                                    onClick={() => handlePageChange(paginationData.totalPages - 1)}\r\n                                />\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Alert variant=\"info\" className=\"mt-3\">\r\n                <Alert.Heading>ℹ️ Informação</Alert.Heading>\r\n                <p>\r\n                    Esta funcionalidade está disponível apenas para usuários com perfil de <strong>ADMINISTRADOR</strong>.\r\n                    Usuários com perfil de <strong>ESTOQUISTA</strong> não têm acesso a esta lista.\r\n                </p>\r\n                <p className=\"mb-0\">\r\n                    <strong>Ações disponíveis:</strong> Você pode cadastrar novos usuários, editar informações, \r\n                    filtrar a lista por nome e ativar/desativar usuários conforme necessário.\r\n                    Usuários inativos não poderão fazer login no sistema.\r\n                </p>\r\n            </Alert>\r\n            \r\n            {/* Modal de Confirmação */}\r\n            <Modal show={showModal} onHide={cancelStatusChange} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {selectedUser?.status === 'ATIVO' ? '🔒 Desativar Usuário' : '🔓 Ativar Usuário'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedUser && (\r\n                        <div>\r\n                            <p>\r\n                                Tem certeza que deseja {selectedUser.status === 'ATIVO' ? 'desativar' : 'ativar'} o usuário:\r\n                            </p>\r\n                            <div className=\"bg-light p-3 rounded\">\r\n                                <strong>{selectedUser.nome}</strong><br/>\r\n                                <small className=\"text-muted\">{selectedUser.email}</small><br/>\r\n                                <Badge bg={selectedUser.grupo === 'ADMIN' ? 'danger' : 'info'}>\r\n                                    {selectedUser.grupo}\r\n                                </Badge>\r\n                            </div>\r\n                            <br/>\r\n                            <Alert variant={selectedUser.status === 'ATIVO' ? 'warning' : 'info'}>\r\n                                {selectedUser.status === 'ATIVO' ? (\r\n                                    <>\r\n                                        <strong>⚠️ Atenção:</strong> Ao desativar este usuário, ele não conseguirá mais \r\n                                        fazer login no sistema até ser reativado.\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <strong>ℹ️ Informação:</strong> Ao ativar este usuário, ele poderá fazer login \r\n                                        normalmente no sistema.\r\n                                    </>\r\n                                )}\r\n                            </Alert>\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={cancelStatusChange}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button \r\n                        variant={selectedUser?.status === 'ATIVO' ? 'warning' : 'success'}\r\n                        onClick={confirmStatusChange}\r\n                        disabled={loadingUserId !== null}\r\n                    >\r\n                        {loadingUserId !== null ? (\r\n                            <Spinner size=\"sm\" animation=\"border\" className=\"me-2\" />\r\n                        ) : null}\r\n                        {selectedUser?.status === 'ATIVO' ? 'Sim, Desativar' : 'Sim, Ativar'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n            {/* Modal de Cadastro */}\r\n            <UsuarioCadastroModal\r\n                show={showCadastroModal}\r\n                onHide={() => setShowCadastroModal(false)}\r\n                onUsuarioCadastrado={() => {\r\n                    fetchUsers(filtroNome, filtroStatus, currentPage, pageSize);\r\n                    setShowCadastroModal(false);\r\n                }}\r\n            />\r\n            \r\n            {/* Modal de Alteração */}\r\n            <UsuarioAlteracaoModal\r\n                show={showAlteracaoModal}\r\n                onHide={() => {\r\n                    setShowAlteracaoModal(false);\r\n                    setUsuarioParaAlterar(null);\r\n                }}\r\n                usuario={usuarioParaAlterar}\r\n                onUsuarioAlterado={() => {\r\n                    fetchUsers(filtroNome, filtroStatus, currentPage, pageSize);\r\n                    setShowAlteracaoModal(false);\r\n                    setUsuarioParaAlterar(null);\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}