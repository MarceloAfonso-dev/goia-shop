{"ast":null,"code":"import _objectSpread from\"D:/PI4/goia-shop/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Modal,Form,Button,Alert,Row,Col,Spinner,Card,Badge,Image}from'react-bootstrap';import api from'../utils/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ProductEditModal=_ref=>{let{show,onHide,product,onProductUpdated}=_ref;const[formData,setFormData]=useState({nome:'',descricao:'',preco:'',quantidadeEstoque:'',avaliacao:'',status:''});const[imagens,setImagens]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[uploadingImages,setUploadingImages]=useState(false);const[newImages,setNewImages]=useState([]);const[newImagePreviews,setNewImagePreviews]=useState([]);useEffect(()=>{if(product){setFormData({nome:product.nome||'',descricao:product.descricao||'',preco:product.preco||'',quantidadeEstoque:product.quantidadeEstoque||'',avaliacao:product.avaliacao||'',status:product.status||'ATIVO'});// Carregar imagens do produto\nif(product.imagens&&product.imagens.length>0){setImagens(product.imagens);}else{setImagens([]);}}},[product]);const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));setError('');};const handleImageUpload=e=>{const files=Array.from(e.target.files);if(files.length>0){// Validar tipos de arquivo\nconst validTypes=['image/jpeg','image/png','image/gif','image/webp'];const invalidFiles=files.filter(file=>!validTypes.includes(file.type));if(invalidFiles.length>0){setError('Apenas imagens (JPEG, PNG, GIF, WebP) são permitidas');return;}// Validar tamanho (5MB por arquivo)\nconst oversizedFiles=files.filter(file=>file.size>5*1024*1024);if(oversizedFiles.length>0){setError('Cada imagem deve ter no máximo 5MB');return;}// Verificar se não excede 5 imagens totais (existentes + novas)\nconst totalImages=imagens.length+newImagePreviews.length+files.length;if(totalImages>5){setError(\"M\\xE1ximo 5 imagens permitidas. Voc\\xEA j\\xE1 tem \".concat(imagens.length+newImagePreviews.length,\" imagens.\"));return;}setNewImages(prev=>[...prev,...files]);// Criar previews para as novas imagens\nconst newPreviews=files.map((file,index)=>({id:\"new_\".concat(Date.now(),\"_\").concat(index),file:file,url:URL.createObjectURL(file),nomeArquivo:file.name,isPrincipal:imagens.length===0&&newImagePreviews.length===0&&index===0,// Primeira imagem é principal se não há outras\nordem:imagens.length+newImagePreviews.length+index,isNew:true}));setNewImagePreviews(prev=>[...prev,...newPreviews]);setError('');}};// Função para obter todas as imagens (existentes + novas) em ordem\nconst getAllImages=()=>{const existingImages=imagens.map(img=>_objectSpread(_objectSpread({},img),{},{isNew:false}));const newImagesWithFlag=newImagePreviews.map(img=>_objectSpread(_objectSpread({},img),{},{isNew:true}));return[...existingImages,...newImagesWithFlag].sort((a,b)=>a.ordem-b.ordem);};// Função para atualizar uma imagem específica\nconst updateImage=(imageId,updates)=>{setImagens(prev=>prev.map(img=>img.id===imageId?_objectSpread(_objectSpread({},img),updates):img));setNewImagePreviews(prev=>prev.map(img=>img.id===imageId?_objectSpread(_objectSpread({},img),updates):img));};// Função para remover uma imagem (existente ou nova)\nconst removeImage=(imageId,isNew)=>{if(isNew){// Remover das novas imagens\nconst imageToRemove=newImagePreviews.find(img=>img.id===imageId);if(imageToRemove){URL.revokeObjectURL(imageToRemove.url);// Limpar URL do blob\nsetNewImagePreviews(prev=>prev.filter(img=>img.id!==imageId));setNewImages(prev=>prev.filter(file=>file.name!==imageToRemove.nomeArquivo));// Reordenar as imagens restantes\nreorderAllImages();}}else{// Remover imagem existente (mesma lógica anterior)\nhandleRemoveImage(imageId);}};// Função para reordenar todas as imagens\nconst reorderAllImages=()=>{const allImages=getAllImages();allImages.forEach((img,index)=>{updateImage(img.id,{ordem:index});});// Se não há imagem principal, definir a primeira como principal\nif(allImages.length>0&&!allImages.some(img=>img.isPrincipal)){updateImage(allImages[0].id,{isPrincipal:true});}};// Função para mover imagem (funciona para existentes e novas)\nconst moveImage=(fromIndex,toIndex)=>{const allImages=getAllImages();const[movedImage]=allImages.splice(fromIndex,1);allImages.splice(toIndex,0,movedImage);// Atualizar ordem de todas as imagens\nallImages.forEach((img,index)=>{updateImage(img.id,{ordem:index});});};// Função para definir imagem como principal (funciona para existentes e novas)\nconst setMainImage=imageId=>{const allImages=getAllImages();// Remover principal de todas as imagens\nallImages.forEach(img=>{updateImage(img.id,{isPrincipal:false});});// Definir a nova principal\nupdateImage(imageId,{isPrincipal:true});// Mover para primeira posição\nconst targetImage=allImages.find(img=>img.id===imageId);if(targetImage){const currentIndex=allImages.findIndex(img=>img.id===imageId);moveImage(currentIndex,0);}};const handleRemoveImage=async imagemId=>{if(!window.confirm('Tem certeza que deseja remover esta imagem?')){return;}try{await api.delete(\"/produtos/\".concat(product.id,\"/imagens/\").concat(imagemId));// Remover da lista local\nconst updatedImages=imagens.filter(img=>img.id!==imagemId);// Se era a imagem principal, definir a primeira como principal e reordenar\nif(updatedImages.length>0&&!updatedImages.some(img=>img.isPrincipal)){const reorderedImages=updatedImages.map((img,index)=>_objectSpread(_objectSpread({},img),{},{isPrincipal:index===0,ordem:index}));setImagens(reorderedImages);}else{// Reordenar as imagens restantes\nconst reorderedImages=updatedImages.map((img,index)=>_objectSpread(_objectSpread({},img),{},{ordem:index}));setImagens(reorderedImages);}}catch(err){var _err$response;setError('Erro ao remover imagem: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message));}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{// Validações (melhoradas do modal básico)\nif(!formData.nome.trim()){throw new Error('Nome do produto é obrigatório');}if(!formData.preco||parseFloat(formData.preco)<=0){throw new Error('Preço deve ser maior que zero');}if(!formData.quantidadeEstoque||parseInt(formData.quantidadeEstoque)<=0){throw new Error('Quantidade em estoque deve ser maior que zero. Para zerar o estoque, use a opção de inativar o produto.');}if(formData.avaliacao&&(parseFloat(formData.avaliacao)<1||parseFloat(formData.avaliacao)>5)){throw new Error('Avaliação deve estar entre 1 e 5');}// Preparar dados do produto com todas as imagens (existentes + novas)\nconst allImages=getAllImages();const existingImages=allImages.filter(img=>!img.isNew);const newImagesInOrder=allImages.filter(img=>img.isNew);const productData={nome:formData.nome.trim(),descricao:formData.descricao.trim(),preco:parseFloat(formData.preco),quantidadeEstoque:parseInt(formData.quantidadeEstoque),avaliacao:formData.avaliacao?parseFloat(formData.avaliacao):null,status:formData.status,imagens:existingImages.map((img,index)=>({imagemId:img.id,ordem:img.ordem,isPrincipal:img.isPrincipal}))};// Upload de novas imagens na ordem correta\nif(newImagesInOrder.length>0){setUploadingImages(true);for(let i=0;i<newImagesInOrder.length;i++){const imageData=newImagesInOrder[i];const file=newImages.find(f=>f.name===imageData.nomeArquivo);if(file){const formDataImg=new FormData();formDataImg.append('file',file);formDataImg.append('isPrincipal',imageData.isPrincipal?'true':'false');formDataImg.append('ordem',imageData.ordem.toString());await api.post(\"/produtos/\".concat(product.id,\"/images\"),formDataImg);}}setUploadingImages(false);}// Atualizar produto com dados básicos e reordenação das imagens existentes\nawait api.put(\"/produtos/\".concat(product.id,\"/completo\"),productData);onProductUpdated();onHide();}catch(err){var _err$response2;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||err.message||'Erro ao atualizar produto');setUploadingImages(false);}finally{setLoading(false);}};const handleClose=()=>{// Prevenir fechamento acidental durante upload\nif(loading||uploadingImages){return;}// Limpar URLs dos blobs das novas imagens\nnewImagePreviews.forEach(img=>{if(img.url){URL.revokeObjectURL(img.url);}});// Reset do formulário\nsetFormData({nome:'',descricao:'',preco:'',quantidadeEstoque:'',avaliacao:'',status:'ATIVO'});setImagens([]);setNewImages([]);setNewImagePreviews([]);setError('');onHide();};return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,size:\"xl\",centered:true,backdrop:\"static\",style:{zIndex:1050},children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"\\u270F\\uFE0F Editar Produto\"})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Modal.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDD Neste modal voc\\xEA pode editar:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mb-0 mt-2\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dados b\\xE1sicos:\"}),\" Nome, descri\\xE7\\xE3o, pre\\xE7o, quantidade, avalia\\xE7\\xE3o e status\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Imagens:\"}),\" Adicionar novas, remover existentes, definir principal e reordenar\"]})]})]}),/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDCCB Dados B\\xE1sicos\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nome do Produto *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"nome\",value:formData.nome,onChange:handleInputChange,required:true,placeholder:\"Nome do produto\"})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Pre\\xE7o *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",step:\"0.01\",name:\"preco\",value:formData.preco,onChange:handleInputChange,required:true,placeholder:\"0.00\"})]})})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Descri\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,name:\"descricao\",value:formData.descricao,onChange:handleInputChange,placeholder:\"Descri\\xE7\\xE3o do produto\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Quantidade em Estoque *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",name:\"quantidadeEstoque\",value:formData.quantidadeEstoque,onChange:handleInputChange,required:true,min:\"1\",placeholder:\"1\"})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Avalia\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",step:\"0.1\",min:\"1\",max:\"5\",name:\"avaliacao\",value:formData.avaliacao,onChange:handleInputChange,placeholder:\"1.0 - 5.0\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Opcional - de 1 a 5\"})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Status\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"status\",value:formData.status,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"ATIVO\",children:\"Ativo\"}),/*#__PURE__*/_jsx(\"option\",{value:\"INATIVO\",children:\"Inativo\"})]})]})})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"my-4\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDDBC\\uFE0F Gerenciamento de Imagens\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uD83D\\uDCE4 Adicionar Novas Imagens\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",multiple:true,accept:\"image/jpeg,image/png,image/gif,image/webp\",onChange:handleImageUpload}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Selecione uma ou mais imagens. Formatos aceitos: JPEG, PNG, GIF, WebP (m\\xE1x. 5MB cada)\"})]}),(imagens.length>0||newImagePreviews.length>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDCF8 Imagens do Produto\"}),/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"small mb-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCA1 Como usar:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mb-0 mt-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Clique em \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\\"\\u2B50 Definir como Principal\\\"\"}),\" para escolher a imagem de destaque\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Use \\u2191\\u2193 para reordenar as imagens\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Clique no \\u274C para remover uma imagem\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-info\",children:\"NOVA\"}),\" indica imagens que ser\\xE3o adicionadas quando salvar\"]})]})]}),/*#__PURE__*/_jsx(Row,{className:\"g-3\",children:getAllImages().map((imagem,index)=>/*#__PURE__*/_jsx(Col,{md:4,lg:3,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(Image,{src:imagem.isNew?imagem.url:imagem.urlArquivo,alt:imagem.nomeArquivo,style:{width:'100%',height:'200px',objectFit:'cover'}}),imagem.isPrincipal&&/*#__PURE__*/_jsx(Badge,{bg:\"success\",className:\"position-absolute top-0 start-0 m-2\",style:{fontSize:'0.8rem'},children:\"\\u2B50 PRINCIPAL\"}),imagem.isNew&&/*#__PURE__*/_jsx(Badge,{bg:\"info\",className:\"position-absolute top-0 start-50 translate-middle-x m-2\",style:{fontSize:'0.7rem'},children:\"NOVA\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"sm\",className:\"position-absolute top-0 end-0 m-2\",onClick:()=>removeImage(imagem.id,imagem.isNew),style:{width:'30px',height:'30px',padding:'0'},title:\"Remover imagem\",children:\"\\u274C\"})]}),/*#__PURE__*/_jsxs(Card.Body,{className:\"p-2\",children:[/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted d-block mb-2\",title:imagem.nomeArquivo,children:[imagem.nomeArquivo.length>20?imagem.nomeArquivo.substring(0,20)+'...':imagem.nomeArquivo,imagem.isNew&&/*#__PURE__*/_jsx(\"span\",{className:\"text-info\",children:\" (nova)\"})]}),!imagem.isPrincipal?/*#__PURE__*/_jsx(Button,{variant:\"outline-warning\",size:\"sm\",className:\"w-100 mb-2\",onClick:()=>setMainImage(imagem.id),children:\"\\u2B50 Definir como Principal\"}):/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"sm\",className:\"w-100 mb-2\",disabled:true,children:\"\\u2705 Imagem Principal\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1 justify-content-center\",children:[index>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",size:\"sm\",onClick:()=>moveImage(index,index-1),title:\"Mover para cima\",style:{flex:1},children:\"\\u2191\"}),index<getAllImages().length-1&&/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",size:\"sm\",onClick:()=>moveImage(index,index+1),title:\"Mover para baixo\",style:{flex:1},children:\"\\u2193\"}),!imagem.isPrincipal&&/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",size:\"sm\",onClick:()=>setMainImage(imagem.id),title:\"Mover para primeira posi\\xE7\\xE3o e definir como principal\",style:{flex:1},children:\"\\u2B06\\uFE0F Topo\"})]})]})]})},imagem.id))})]})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClose,disabled:loading||uploadingImages,children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:loading||uploadingImages,children:loading||uploadingImages?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{size:\"sm\",className:\"me-2\"}),uploadingImages?'Enviando imagens...':'Salvando...']}):'💾 Salvar Alterações'})]})]})]});};export default ProductEditModal;","map":{"version":3,"names":["React","useState","useEffect","Modal","Form","Button","Alert","Row","Col","Spinner","Card","Badge","Image","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProductEditModal","_ref","show","onHide","product","onProductUpdated","formData","setFormData","nome","descricao","preco","quantidadeEstoque","avaliacao","status","imagens","setImagens","loading","setLoading","error","setError","uploadingImages","setUploadingImages","newImages","setNewImages","newImagePreviews","setNewImagePreviews","length","handleInputChange","e","name","value","target","prev","_objectSpread","handleImageUpload","files","Array","from","validTypes","invalidFiles","filter","file","includes","type","oversizedFiles","size","totalImages","concat","newPreviews","map","index","id","Date","now","url","URL","createObjectURL","nomeArquivo","isPrincipal","ordem","isNew","getAllImages","existingImages","img","newImagesWithFlag","sort","a","b","updateImage","imageId","updates","removeImage","imageToRemove","find","revokeObjectURL","reorderAllImages","handleRemoveImage","allImages","forEach","some","moveImage","fromIndex","toIndex","movedImage","splice","setMainImage","targetImage","currentIndex","findIndex","imagemId","window","confirm","delete","updatedImages","reorderedImages","err","_err$response","response","data","message","handleSubmit","preventDefault","trim","Error","parseFloat","parseInt","newImagesInOrder","productData","i","imageData","f","formDataImg","FormData","append","toString","post","put","_err$response2","handleClose","centered","backdrop","style","zIndex","children","Header","closeButton","Title","onSubmit","Body","variant","className","md","Group","Label","Control","onChange","required","placeholder","step","as","rows","min","max","Text","Select","multiple","accept","imagem","lg","src","urlArquivo","alt","width","height","objectFit","bg","fontSize","onClick","padding","title","substring","disabled","flex","Footer"],"sources":["D:/PI4/goia-shop/frontend/src/components/ProductEditCompleteModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Button, Alert, Row, Col, Spinner, Card, Badge, Image } from 'react-bootstrap';\r\nimport api from '../utils/api';\r\n\r\nconst ProductEditModal = ({ show, onHide, product, onProductUpdated }) => {\r\n    const [formData, setFormData] = useState({\r\n        nome: '',\r\n        descricao: '',\r\n        preco: '',\r\n        quantidadeEstoque: '',\r\n        avaliacao: '',\r\n        status: ''\r\n    });\r\n    const [imagens, setImagens] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [uploadingImages, setUploadingImages] = useState(false);\r\n    const [newImages, setNewImages] = useState([]);\r\n    const [newImagePreviews, setNewImagePreviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (product) {\r\n            setFormData({\r\n                nome: product.nome || '',\r\n                descricao: product.descricao || '',\r\n                preco: product.preco || '',\r\n                quantidadeEstoque: product.quantidadeEstoque || '',\r\n                avaliacao: product.avaliacao || '',\r\n                status: product.status || 'ATIVO'\r\n            });\r\n            \r\n            // Carregar imagens do produto\r\n            if (product.imagens && product.imagens.length > 0) {\r\n                setImagens(product.imagens);\r\n            } else {\r\n                setImagens([]);\r\n            }\r\n        }\r\n    }, [product]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        setError('');\r\n    };\r\n\r\n    const handleImageUpload = (e) => {\r\n        const files = Array.from(e.target.files);\r\n        if (files.length > 0) {\r\n            // Validar tipos de arquivo\r\n            const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n            const invalidFiles = files.filter(file => !validTypes.includes(file.type));\r\n            \r\n            if (invalidFiles.length > 0) {\r\n                setError('Apenas imagens (JPEG, PNG, GIF, WebP) são permitidas');\r\n                return;\r\n            }\r\n            \r\n            // Validar tamanho (5MB por arquivo)\r\n            const oversizedFiles = files.filter(file => file.size > 5 * 1024 * 1024);\r\n            \r\n            if (oversizedFiles.length > 0) {\r\n                setError('Cada imagem deve ter no máximo 5MB');\r\n                return;\r\n            }\r\n\r\n            // Verificar se não excede 5 imagens totais (existentes + novas)\r\n            const totalImages = imagens.length + newImagePreviews.length + files.length;\r\n            if (totalImages > 5) {\r\n                setError(`Máximo 5 imagens permitidas. Você já tem ${imagens.length + newImagePreviews.length} imagens.`);\r\n                return;\r\n            }\r\n\r\n            setNewImages(prev => [...prev, ...files]);\r\n            \r\n            // Criar previews para as novas imagens\r\n            const newPreviews = files.map((file, index) => ({\r\n                id: `new_${Date.now()}_${index}`,\r\n                file: file,\r\n                url: URL.createObjectURL(file),\r\n                nomeArquivo: file.name,\r\n                isPrincipal: (imagens.length === 0 && newImagePreviews.length === 0 && index === 0), // Primeira imagem é principal se não há outras\r\n                ordem: imagens.length + newImagePreviews.length + index,\r\n                isNew: true\r\n            }));\r\n            \r\n            setNewImagePreviews(prev => [...prev, ...newPreviews]);\r\n            setError('');\r\n        }\r\n    };\r\n\r\n    // Função para obter todas as imagens (existentes + novas) em ordem\r\n    const getAllImages = () => {\r\n        const existingImages = imagens.map(img => ({ ...img, isNew: false }));\r\n        const newImagesWithFlag = newImagePreviews.map(img => ({ ...img, isNew: true }));\r\n        return [...existingImages, ...newImagesWithFlag].sort((a, b) => a.ordem - b.ordem);\r\n    };\r\n\r\n    // Função para atualizar uma imagem específica\r\n    const updateImage = (imageId, updates) => {\r\n        setImagens(prev => prev.map(img => \r\n            img.id === imageId ? { ...img, ...updates } : img\r\n        ));\r\n        setNewImagePreviews(prev => prev.map(img => \r\n            img.id === imageId ? { ...img, ...updates } : img\r\n        ));\r\n    };\r\n\r\n    // Função para remover uma imagem (existente ou nova)\r\n    const removeImage = (imageId, isNew) => {\r\n        if (isNew) {\r\n            // Remover das novas imagens\r\n            const imageToRemove = newImagePreviews.find(img => img.id === imageId);\r\n            if (imageToRemove) {\r\n                URL.revokeObjectURL(imageToRemove.url); // Limpar URL do blob\r\n                setNewImagePreviews(prev => prev.filter(img => img.id !== imageId));\r\n                setNewImages(prev => prev.filter(file => file.name !== imageToRemove.nomeArquivo));\r\n                \r\n                // Reordenar as imagens restantes\r\n                reorderAllImages();\r\n            }\r\n        } else {\r\n            // Remover imagem existente (mesma lógica anterior)\r\n            handleRemoveImage(imageId);\r\n        }\r\n    };\r\n\r\n    // Função para reordenar todas as imagens\r\n    const reorderAllImages = () => {\r\n        const allImages = getAllImages();\r\n        \r\n        allImages.forEach((img, index) => {\r\n            updateImage(img.id, { ordem: index });\r\n        });\r\n        \r\n        // Se não há imagem principal, definir a primeira como principal\r\n        if (allImages.length > 0 && !allImages.some(img => img.isPrincipal)) {\r\n            updateImage(allImages[0].id, { isPrincipal: true });\r\n        }\r\n    };\r\n\r\n    // Função para mover imagem (funciona para existentes e novas)\r\n    const moveImage = (fromIndex, toIndex) => {\r\n        const allImages = getAllImages();\r\n        const [movedImage] = allImages.splice(fromIndex, 1);\r\n        allImages.splice(toIndex, 0, movedImage);\r\n        \r\n        // Atualizar ordem de todas as imagens\r\n        allImages.forEach((img, index) => {\r\n            updateImage(img.id, { ordem: index });\r\n        });\r\n    };\r\n\r\n    // Função para definir imagem como principal (funciona para existentes e novas)\r\n    const setMainImage = (imageId) => {\r\n        const allImages = getAllImages();\r\n        \r\n        // Remover principal de todas as imagens\r\n        allImages.forEach(img => {\r\n            updateImage(img.id, { isPrincipal: false });\r\n        });\r\n        \r\n        // Definir a nova principal\r\n        updateImage(imageId, { isPrincipal: true });\r\n        \r\n        // Mover para primeira posição\r\n        const targetImage = allImages.find(img => img.id === imageId);\r\n        if (targetImage) {\r\n            const currentIndex = allImages.findIndex(img => img.id === imageId);\r\n            moveImage(currentIndex, 0);\r\n        }\r\n    };\r\n\r\n    const handleRemoveImage = async (imagemId) => {\r\n        if (!window.confirm('Tem certeza que deseja remover esta imagem?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await api.delete(`/produtos/${product.id}/imagens/${imagemId}`);\r\n            \r\n            // Remover da lista local\r\n            const updatedImages = imagens.filter(img => img.id !== imagemId);\r\n            \r\n            // Se era a imagem principal, definir a primeira como principal e reordenar\r\n            if (updatedImages.length > 0 && !updatedImages.some(img => img.isPrincipal)) {\r\n                const reorderedImages = updatedImages.map((img, index) => ({\r\n                    ...img,\r\n                    isPrincipal: index === 0,\r\n                    ordem: index\r\n                }));\r\n                setImagens(reorderedImages);\r\n            } else {\r\n                // Reordenar as imagens restantes\r\n                const reorderedImages = updatedImages.map((img, index) => ({\r\n                    ...img,\r\n                    ordem: index\r\n                }));\r\n                setImagens(reorderedImages);\r\n            }\r\n        } catch (err) {\r\n            setError('Erro ao remover imagem: ' + (err.response?.data || err.message));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            // Validações (melhoradas do modal básico)\r\n            if (!formData.nome.trim()) {\r\n                throw new Error('Nome do produto é obrigatório');\r\n            }\r\n            if (!formData.preco || parseFloat(formData.preco) <= 0) {\r\n                throw new Error('Preço deve ser maior que zero');\r\n            }\r\n            if (!formData.quantidadeEstoque || parseInt(formData.quantidadeEstoque) <= 0) {\r\n                throw new Error('Quantidade em estoque deve ser maior que zero. Para zerar o estoque, use a opção de inativar o produto.');\r\n            }\r\n            if (formData.avaliacao && (parseFloat(formData.avaliacao) < 1 || parseFloat(formData.avaliacao) > 5)) {\r\n                throw new Error('Avaliação deve estar entre 1 e 5');\r\n            }\r\n\r\n            // Preparar dados do produto com todas as imagens (existentes + novas)\r\n            const allImages = getAllImages();\r\n            const existingImages = allImages.filter(img => !img.isNew);\r\n            const newImagesInOrder = allImages.filter(img => img.isNew);\r\n\r\n            const productData = {\r\n                nome: formData.nome.trim(),\r\n                descricao: formData.descricao.trim(),\r\n                preco: parseFloat(formData.preco),\r\n                quantidadeEstoque: parseInt(formData.quantidadeEstoque),\r\n                avaliacao: formData.avaliacao ? parseFloat(formData.avaliacao) : null,\r\n                status: formData.status,\r\n                imagens: existingImages.map((img, index) => ({\r\n                    imagemId: img.id,\r\n                    ordem: img.ordem,\r\n                    isPrincipal: img.isPrincipal\r\n                }))\r\n            };\r\n\r\n            // Upload de novas imagens na ordem correta\r\n            if (newImagesInOrder.length > 0) {\r\n                setUploadingImages(true);\r\n                \r\n                for (let i = 0; i < newImagesInOrder.length; i++) {\r\n                    const imageData = newImagesInOrder[i];\r\n                    const file = newImages.find(f => f.name === imageData.nomeArquivo);\r\n                    \r\n                    if (file) {\r\n                        const formDataImg = new FormData();\r\n                        formDataImg.append('file', file);\r\n                        formDataImg.append('isPrincipal', imageData.isPrincipal ? 'true' : 'false');\r\n                        formDataImg.append('ordem', imageData.ordem.toString());\r\n\r\n                        await api.post(`/produtos/${product.id}/images`, formDataImg);\r\n                    }\r\n                }\r\n                setUploadingImages(false);\r\n            }\r\n\r\n            // Atualizar produto com dados básicos e reordenação das imagens existentes\r\n            await api.put(`/produtos/${product.id}/completo`, productData);\r\n\r\n            onProductUpdated();\r\n            onHide();\r\n\r\n        } catch (err) {\r\n            setError(err.response?.data || err.message || 'Erro ao atualizar produto');\r\n            setUploadingImages(false);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        // Prevenir fechamento acidental durante upload\r\n        if (loading || uploadingImages) {\r\n            return;\r\n        }\r\n        \r\n        // Limpar URLs dos blobs das novas imagens\r\n        newImagePreviews.forEach(img => {\r\n            if (img.url) {\r\n                URL.revokeObjectURL(img.url);\r\n            }\r\n        });\r\n        \r\n        // Reset do formulário\r\n        setFormData({\r\n            nome: '',\r\n            descricao: '',\r\n            preco: '',\r\n            quantidadeEstoque: '',\r\n            avaliacao: '',\r\n            status: 'ATIVO'\r\n        });\r\n        setImagens([]);\r\n        setNewImages([]);\r\n        setNewImagePreviews([]);\r\n        setError('');\r\n        onHide();\r\n    };\r\n\r\n    return (\r\n        <Modal \r\n            show={show} \r\n            onHide={handleClose} \r\n            size=\"xl\" \r\n            centered \r\n            backdrop=\"static\"\r\n            style={{ zIndex: 1050 }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>✏️ Editar Produto</Modal.Title>\r\n            </Modal.Header>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Modal.Body>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    \r\n                    {/* Informações do que pode ser editado */}\r\n                    <Alert variant=\"info\" className=\"mb-4\">\r\n                        <strong>📝 Neste modal você pode editar:</strong>\r\n                        <ul className=\"mb-0 mt-2\">\r\n                            <li><strong>Dados básicos:</strong> Nome, descrição, preço, quantidade, avaliação e status</li>\r\n                            <li><strong>Imagens:</strong> Adicionar novas, remover existentes, definir principal e reordenar</li>\r\n                        </ul>\r\n                    </Alert>\r\n                    \r\n                    {/* Informações Básicas */}\r\n                    <h5>📋 Dados Básicos</h5>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Nome do Produto *</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"nome\"\r\n                                    value={formData.nome}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    placeholder=\"Nome do produto\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Preço *</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    name=\"preco\"\r\n                                    value={formData.preco}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    placeholder=\"0.00\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Descrição</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"descricao\"\r\n                            value={formData.descricao}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Descrição do produto\"\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Quantidade em Estoque *</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    name=\"quantidadeEstoque\"\r\n                                    value={formData.quantidadeEstoque}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    min=\"1\"\r\n                                    placeholder=\"1\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Avaliação</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    step=\"0.1\"\r\n                                    min=\"1\"\r\n                                    max=\"5\"\r\n                                    name=\"avaliacao\"\r\n                                    value={formData.avaliacao}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"1.0 - 5.0\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Opcional - de 1 a 5\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Status</Form.Label>\r\n                                <Form.Select\r\n                                    name=\"status\"\r\n                                    value={formData.status}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"ATIVO\">Ativo</option>\r\n                                    <option value=\"INATIVO\">Inativo</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* Gerenciamento de Imagens */}\r\n                    <hr className=\"my-4\" />\r\n                    <h5>🖼️ Gerenciamento de Imagens</h5>\r\n                    \r\n                    {/* Upload de Novas Imagens */}\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label>📤 Adicionar Novas Imagens</Form.Label>\r\n                        <Form.Control\r\n                            type=\"file\"\r\n                            multiple\r\n                            accept=\"image/jpeg,image/png,image/gif,image/webp\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Selecione uma ou mais imagens. Formatos aceitos: JPEG, PNG, GIF, WebP (máx. 5MB cada)\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    {/* Lista de Todas as Imagens (Existentes + Novas) */}\r\n                    {(imagens.length > 0 || newImagePreviews.length > 0) && (\r\n                        <div className=\"mb-3\">\r\n                            <h6>📸 Imagens do Produto</h6>\r\n                            <Alert variant=\"info\" className=\"small mb-3\">\r\n                                <strong>💡 Como usar:</strong>\r\n                                <ul className=\"mb-0 mt-1\">\r\n                                    <li>Clique em <strong>\"⭐ Definir como Principal\"</strong> para escolher a imagem de destaque</li>\r\n                                    <li>Use ↑↓ para reordenar as imagens</li>\r\n                                    <li>Clique no ❌ para remover uma imagem</li>\r\n                                    <li><span className=\"badge bg-info\">NOVA</span> indica imagens que serão adicionadas quando salvar</li>\r\n                                </ul>\r\n                            </Alert>\r\n                            <Row className=\"g-3\">\r\n                                {getAllImages().map((imagem, index) => (\r\n                                    <Col key={imagem.id} md={4} lg={3}>\r\n                                        <Card className=\"h-100\">\r\n                                            <div className=\"position-relative\">\r\n                                                <Image\r\n                                                    src={imagem.isNew ? imagem.url : imagem.urlArquivo}\r\n                                                    alt={imagem.nomeArquivo}\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        height: '200px',\r\n                                                        objectFit: 'cover'\r\n                                                    }}\r\n                                                />\r\n                                                {/* Badge de Principal */}\r\n                                                {imagem.isPrincipal && (\r\n                                                    <Badge\r\n                                                        bg=\"success\"\r\n                                                        className=\"position-absolute top-0 start-0 m-2\"\r\n                                                        style={{ fontSize: '0.8rem' }}\r\n                                                    >\r\n                                                        ⭐ PRINCIPAL\r\n                                                    </Badge>\r\n                                                )}\r\n                                                {/* Badge de Nova Imagem */}\r\n                                                {imagem.isNew && (\r\n                                                    <Badge\r\n                                                        bg=\"info\"\r\n                                                        className=\"position-absolute top-0 start-50 translate-middle-x m-2\"\r\n                                                        style={{ fontSize: '0.7rem' }}\r\n                                                    >\r\n                                                        NOVA\r\n                                                    </Badge>\r\n                                                )}\r\n                                                {/* Botão Remover */}\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    size=\"sm\"\r\n                                                    className=\"position-absolute top-0 end-0 m-2\"\r\n                                                    onClick={() => removeImage(imagem.id, imagem.isNew)}\r\n                                                    style={{ width: '30px', height: '30px', padding: '0' }}\r\n                                                    title=\"Remover imagem\"\r\n                                                >\r\n                                                    ❌\r\n                                                </Button>\r\n                                            </div>\r\n                                            <Card.Body className=\"p-2\">\r\n                                                <small className=\"text-muted d-block mb-2\" title={imagem.nomeArquivo}>\r\n                                                    {imagem.nomeArquivo.length > 20 ? \r\n                                                        imagem.nomeArquivo.substring(0, 20) + '...' : \r\n                                                        imagem.nomeArquivo\r\n                                                    }\r\n                                                    {imagem.isNew && <span className=\"text-info\"> (nova)</span>}\r\n                                                </small>\r\n                                                \r\n                                                {/* Botão Principal - Redesenhado */}\r\n                                                {!imagem.isPrincipal ? (\r\n                                                    <Button\r\n                                                        variant=\"outline-warning\"\r\n                                                        size=\"sm\"\r\n                                                        className=\"w-100 mb-2\"\r\n                                                        onClick={() => setMainImage(imagem.id)}\r\n                                                    >\r\n                                                        ⭐ Definir como Principal\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                    <Button\r\n                                                        variant=\"success\"\r\n                                                        size=\"sm\"\r\n                                                        className=\"w-100 mb-2\"\r\n                                                        disabled\r\n                                                    >\r\n                                                        ✅ Imagem Principal\r\n                                                    </Button>\r\n                                                )}\r\n                                                \r\n                                                {/* Botões de Ordenação */}\r\n                                                <div className=\"d-flex gap-1 justify-content-center\">\r\n                                                    {index > 0 && (\r\n                                                        <Button\r\n                                                            variant=\"outline-secondary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => moveImage(index, index - 1)}\r\n                                                            title=\"Mover para cima\"\r\n                                                            style={{ flex: 1 }}\r\n                                                        >\r\n                                                            ↑\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    {index < getAllImages().length - 1 && (\r\n                                                        <Button\r\n                                                            variant=\"outline-secondary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => moveImage(index, index + 1)}\r\n                                                            title=\"Mover para baixo\"\r\n                                                            style={{ flex: 1 }}\r\n                                                        >\r\n                                                            ↓\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    {!imagem.isPrincipal && (\r\n                                                        <Button\r\n                                                            variant=\"outline-primary\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => setMainImage(imagem.id)}\r\n                                                            title=\"Mover para primeira posição e definir como principal\"\r\n                                                            style={{ flex: 1 }}\r\n                                                        >\r\n                                                            ⬆️ Topo\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose} disabled={loading || uploadingImages}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading || uploadingImages}>\r\n                        {loading || uploadingImages ? (\r\n                            <>\r\n                                <Spinner size=\"sm\" className=\"me-2\" />\r\n                                {uploadingImages ? 'Enviando imagens...' : 'Salvando...'}\r\n                            </>\r\n                        ) : (\r\n                            '💾 Salvar Alterações'\r\n                        )}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ProductEditModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}